QT_MOC_LITERAL	Run\debug\moc_mainwindow.cpp	25;"	d	file:
QT_MOC_LITERAL	Run\debug\moc_mainwindow.cpp	47;"	d	file:
data	Run\debug\moc_mainwindow.cpp	/^    QByteArrayData data[9];$/;"	m	struct:qt_meta_stringdata_MainWindow_t	file:
metaObject	Run\debug\moc_mainwindow.cpp	/^const QMetaObject *MainWindow::metaObject() const$/;"	f	class:MainWindow
qt_meta_data_MainWindow	Run\debug\moc_mainwindow.cpp	/^static const uint qt_meta_data_MainWindow[] = {$/;"	v	file:
qt_meta_stringdata_MainWindow	Run\debug\moc_mainwindow.cpp	/^static const qt_meta_stringdata_MainWindow_t qt_meta_stringdata_MainWindow = {$/;"	v	file:
qt_meta_stringdata_MainWindow_t	Run\debug\moc_mainwindow.cpp	/^struct qt_meta_stringdata_MainWindow_t {$/;"	s	file:
qt_metacall	Run\debug\moc_mainwindow.cpp	/^int MainWindow::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MainWindow
qt_metacast	Run\debug\moc_mainwindow.cpp	/^void *MainWindow::qt_metacast(const char *_clname)$/;"	f	class:MainWindow
qt_static_metacall	Run\debug\moc_mainwindow.cpp	/^void MainWindow::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:MainWindow
staticMetaObject	Run\debug\moc_mainwindow.cpp	/^const QMetaObject MainWindow::staticMetaObject = {$/;"	m	class:MainWindow	file:
stringdata0	Run\debug\moc_mainwindow.cpp	/^    char stringdata0[85];$/;"	m	struct:qt_meta_stringdata_MainWindow_t	file:
QT_MOC_LITERAL	Run\debug\moc_sessioninfo.cpp	25;"	d	file:
QT_MOC_LITERAL	Run\debug\moc_sessioninfo.cpp	43;"	d	file:
data	Run\debug\moc_sessioninfo.cpp	/^    QByteArrayData data[6];$/;"	m	struct:qt_meta_stringdata_SessionInfo_t	file:
metaObject	Run\debug\moc_sessioninfo.cpp	/^const QMetaObject *SessionInfo::metaObject() const$/;"	f	class:SessionInfo
qt_meta_data_SessionInfo	Run\debug\moc_sessioninfo.cpp	/^static const uint qt_meta_data_SessionInfo[] = {$/;"	v	file:
qt_meta_stringdata_SessionInfo	Run\debug\moc_sessioninfo.cpp	/^static const qt_meta_stringdata_SessionInfo_t qt_meta_stringdata_SessionInfo = {$/;"	v	file:
qt_meta_stringdata_SessionInfo_t	Run\debug\moc_sessioninfo.cpp	/^struct qt_meta_stringdata_SessionInfo_t {$/;"	s	file:
qt_metacall	Run\debug\moc_sessioninfo.cpp	/^int SessionInfo::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SessionInfo
qt_metacast	Run\debug\moc_sessioninfo.cpp	/^void *SessionInfo::qt_metacast(const char *_clname)$/;"	f	class:SessionInfo
qt_static_metacall	Run\debug\moc_sessioninfo.cpp	/^void SessionInfo::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:SessionInfo
signalDisconnect	Run\debug\moc_sessioninfo.cpp	/^void SessionInfo::signalDisconnect(int _t1)$/;"	f	class:SessionInfo
signalReadData	Run\debug\moc_sessioninfo.cpp	/^void SessionInfo::signalReadData(int _t1, QString _t2)$/;"	f	class:SessionInfo
staticMetaObject	Run\debug\moc_sessioninfo.cpp	/^const QMetaObject SessionInfo::staticMetaObject = {$/;"	m	class:SessionInfo	file:
stringdata0	Run\debug\moc_sessioninfo.cpp	/^    char stringdata0[53];$/;"	m	struct:qt_meta_stringdata_SessionInfo_t	file:
QT_MOC_LITERAL	Run\debug\moc_socket.cpp	25;"	d	file:
QT_MOC_LITERAL	Run\debug\moc_socket.cpp	42;"	d	file:
data	Run\debug\moc_socket.cpp	/^    QByteArrayData data[5];$/;"	m	struct:qt_meta_stringdata_Socket_t	file:
metaObject	Run\debug\moc_socket.cpp	/^const QMetaObject *Socket::metaObject() const$/;"	f	class:Socket
qt_meta_data_Socket	Run\debug\moc_socket.cpp	/^static const uint qt_meta_data_Socket[] = {$/;"	v	file:
qt_meta_stringdata_Socket	Run\debug\moc_socket.cpp	/^static const qt_meta_stringdata_Socket_t qt_meta_stringdata_Socket = {$/;"	v	file:
qt_meta_stringdata_Socket_t	Run\debug\moc_socket.cpp	/^struct qt_meta_stringdata_Socket_t {$/;"	s	file:
qt_metacall	Run\debug\moc_socket.cpp	/^int Socket::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Socket
qt_metacast	Run\debug\moc_socket.cpp	/^void *Socket::qt_metacast(const char *_clname)$/;"	f	class:Socket
qt_static_metacall	Run\debug\moc_socket.cpp	/^void Socket::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Socket
signalReadyRead	Run\debug\moc_socket.cpp	/^void Socket::signalReadyRead(int _t1)$/;"	f	class:Socket
staticMetaObject	Run\debug\moc_socket.cpp	/^const QMetaObject Socket::staticMetaObject = {$/;"	m	class:Socket	file:
stringdata0	Run\debug\moc_socket.cpp	/^    char stringdata0[44];$/;"	m	struct:qt_meta_stringdata_Socket_t	file:
QT_MOC_LITERAL	Run\debug\moc_userinfo.cpp	25;"	d	file:
QT_MOC_LITERAL	Run\debug\moc_userinfo.cpp	43;"	d	file:
data	Run\debug\moc_userinfo.cpp	/^    QByteArrayData data[6];$/;"	m	struct:qt_meta_stringdata_UserInfo_t	file:
metaObject	Run\debug\moc_userinfo.cpp	/^const QMetaObject *UserInfo::metaObject() const$/;"	f	class:UserInfo
qt_meta_data_UserInfo	Run\debug\moc_userinfo.cpp	/^static const uint qt_meta_data_UserInfo[] = {$/;"	v	file:
qt_meta_stringdata_UserInfo	Run\debug\moc_userinfo.cpp	/^static const qt_meta_stringdata_UserInfo_t qt_meta_stringdata_UserInfo = {$/;"	v	file:
qt_meta_stringdata_UserInfo_t	Run\debug\moc_userinfo.cpp	/^struct qt_meta_stringdata_UserInfo_t {$/;"	s	file:
qt_metacall	Run\debug\moc_userinfo.cpp	/^int UserInfo::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:UserInfo
qt_metacast	Run\debug\moc_userinfo.cpp	/^void *UserInfo::qt_metacast(const char *_clname)$/;"	f	class:UserInfo
qt_static_metacall	Run\debug\moc_userinfo.cpp	/^void UserInfo::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:UserInfo
signalDisconnect	Run\debug\moc_userinfo.cpp	/^void UserInfo::signalDisconnect(int _t1)$/;"	f	class:UserInfo
signalReadData	Run\debug\moc_userinfo.cpp	/^void UserInfo::signalReadData(int _t1, QString _t2)$/;"	f	class:UserInfo
staticMetaObject	Run\debug\moc_userinfo.cpp	/^const QMetaObject UserInfo::staticMetaObject = {$/;"	m	class:UserInfo	file:
stringdata0	Run\debug\moc_userinfo.cpp	/^    char stringdata0[50];$/;"	m	struct:qt_meta_stringdata_UserInfo_t	file:
QT_MOC_LITERAL	Run\debug\moc_userinfos.cpp	25;"	d	file:
QT_MOC_LITERAL	Run\debug\moc_userinfos.cpp	45;"	d	file:
data	Run\debug\moc_userinfos.cpp	/^    QByteArrayData data[7];$/;"	m	struct:qt_meta_stringdata_UserInfos_t	file:
metaObject	Run\debug\moc_userinfos.cpp	/^const QMetaObject *UserInfos::metaObject() const$/;"	f	class:UserInfos
qt_meta_data_UserInfos	Run\debug\moc_userinfos.cpp	/^static const uint qt_meta_data_UserInfos[] = {$/;"	v	file:
qt_meta_stringdata_UserInfos	Run\debug\moc_userinfos.cpp	/^static const qt_meta_stringdata_UserInfos_t qt_meta_stringdata_UserInfos = {$/;"	v	file:
qt_meta_stringdata_UserInfos_t	Run\debug\moc_userinfos.cpp	/^struct qt_meta_stringdata_UserInfos_t {$/;"	s	file:
qt_metacall	Run\debug\moc_userinfos.cpp	/^int UserInfos::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:UserInfos
qt_metacast	Run\debug\moc_userinfos.cpp	/^void *UserInfos::qt_metacast(const char *_clname)$/;"	f	class:UserInfos
qt_static_metacall	Run\debug\moc_userinfos.cpp	/^void UserInfos::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:UserInfos
signalDisConnection	Run\debug\moc_userinfos.cpp	/^void UserInfos::signalDisConnection(int _t1)$/;"	f	class:UserInfos
signalReadyRead	Run\debug\moc_userinfos.cpp	/^void UserInfos::signalReadyRead(int _t1)$/;"	f	class:UserInfos
staticMetaObject	Run\debug\moc_userinfos.cpp	/^const QMetaObject UserInfos::staticMetaObject = {$/;"	m	class:UserInfos	file:
stringdata0	Run\debug\moc_userinfos.cpp	/^    char stringdata0[85];$/;"	m	struct:qt_meta_stringdata_UserInfos_t	file:
QT_MOC_LITERAL	Run\debug\moc_usersocket.cpp	25;"	d	file:
QT_MOC_LITERAL	Run\debug\moc_usersocket.cpp	45;"	d	file:
data	Run\debug\moc_usersocket.cpp	/^    QByteArrayData data[7];$/;"	m	struct:qt_meta_stringdata_UserSocket_t	file:
metaObject	Run\debug\moc_usersocket.cpp	/^const QMetaObject *UserSocket::metaObject() const$/;"	f	class:UserSocket
qt_meta_data_UserSocket	Run\debug\moc_usersocket.cpp	/^static const uint qt_meta_data_UserSocket[] = {$/;"	v	file:
qt_meta_stringdata_UserSocket	Run\debug\moc_usersocket.cpp	/^static const qt_meta_stringdata_UserSocket_t qt_meta_stringdata_UserSocket = {$/;"	v	file:
qt_meta_stringdata_UserSocket_t	Run\debug\moc_usersocket.cpp	/^struct qt_meta_stringdata_UserSocket_t {$/;"	s	file:
qt_metacall	Run\debug\moc_usersocket.cpp	/^int UserSocket::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:UserSocket
qt_metacast	Run\debug\moc_usersocket.cpp	/^void *UserSocket::qt_metacast(const char *_clname)$/;"	f	class:UserSocket
qt_static_metacall	Run\debug\moc_usersocket.cpp	/^void UserSocket::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:UserSocket
signalDisConnection	Run\debug\moc_usersocket.cpp	/^void UserSocket::signalDisConnection(int _t1)$/;"	f	class:UserSocket
signalReadyRead	Run\debug\moc_usersocket.cpp	/^void UserSocket::signalReadyRead(int _t1)$/;"	f	class:UserSocket
staticMetaObject	Run\debug\moc_usersocket.cpp	/^const QMetaObject UserSocket::staticMetaObject = {$/;"	m	class:UserSocket	file:
stringdata0	Run\debug\moc_usersocket.cpp	/^    char stringdata0[86];$/;"	m	struct:qt_meta_stringdata_UserSocket_t	file:
MainWindow	Run\ui_mainwindow.h	/^    class MainWindow: public Ui_MainWindow {};$/;"	c	namespace:Ui
UI_MAINWINDOW_H	Run\ui_mainwindow.h	10;"	d
Ui	Run\ui_mainwindow.h	/^namespace Ui {$/;"	n
Ui_MainWindow	Run\ui_mainwindow.h	/^class Ui_MainWindow$/;"	c
centralWidget	Run\ui_mainwindow.h	/^    QWidget *centralWidget;$/;"	m	class:Ui_MainWindow
lineEdit	Run\ui_mainwindow.h	/^    QLineEdit *lineEdit;$/;"	m	class:Ui_MainWindow
lineEdit_2	Run\ui_mainwindow.h	/^    QLineEdit *lineEdit_2;$/;"	m	class:Ui_MainWindow
lineEdit_3	Run\ui_mainwindow.h	/^    QLineEdit *lineEdit_3;$/;"	m	class:Ui_MainWindow
mainToolBar	Run\ui_mainwindow.h	/^    QToolBar *mainToolBar;$/;"	m	class:Ui_MainWindow
menuBar	Run\ui_mainwindow.h	/^    QMenuBar *menuBar;$/;"	m	class:Ui_MainWindow
pushButton	Run\ui_mainwindow.h	/^    QPushButton *pushButton;$/;"	m	class:Ui_MainWindow
recorderTextEdit	Run\ui_mainwindow.h	/^    QTextEdit *recorderTextEdit;$/;"	m	class:Ui_MainWindow
retranslateUi	Run\ui_mainwindow.h	/^    void retranslateUi(QMainWindow *MainWindow)$/;"	f	class:Ui_MainWindow
setupUi	Run\ui_mainwindow.h	/^    void setupUi(QMainWindow *MainWindow)$/;"	f	class:Ui_MainWindow
statusBar	Run\ui_mainwindow.h	/^    QStatusBar *statusBar;$/;"	m	class:Ui_MainWindow
ensureDirExist	fileutil.cpp	/^bool ensureDirExist(QString path)$/;"	f
ensureFileExist	fileutil.cpp	/^bool ensureFileExist(QString path)$/;"	f
ensureFileNotExist	fileutil.cpp	/^bool ensureFileNotExist(QString path)$/;"	f
isDir	fileutil.cpp	/^bool isDir(QString path)$/;"	f
isFileExist	fileutil.cpp	/^bool isFileExist(QString path)$/;"	f
readExistedTextFile	fileutil.cpp	/^QString readExistedTextFile(QString path)$/;"	f
readTextFile	fileutil.cpp	/^QString readTextFile(QString path)$/;"	f
readTextFile	fileutil.cpp	/^QString readTextFile(QString path, QString codec)$/;"	f
readTextFile	fileutil.cpp	/^QString readTextFile(QString path, QTextCodec *codec)$/;"	f
writeTextFile	fileutil.cpp	/^bool writeTextFile(QString path, QString text)$/;"	f
writeTextFile	fileutil.cpp	/^bool writeTextFile(QString path, QString text, QString codec)$/;"	f
writeTextFile	fileutil.cpp	/^bool writeTextFile(QString path, QString text, QTextCodec *codec)$/;"	f
FILEUTIL_H	fileutil.h	2;"	d
AppPath	globals.cpp	/^QString AppPath = "";$/;"	v
DataPath	globals.cpp	/^QString DataPath = "";$/;"	v
INTEGRAL	globals.cpp	/^int INTEGRAL = 0;$/;"	v
PASSWORD	globals.cpp	/^QString PASSWORD = "";$/;"	v
Path	globals.cpp	/^QString Path(QString str)$/;"	f
SERVER_IP	globals.cpp	/^QString SERVER_IP = "127.0.0.1";$/;"	v
SERVER_PORT	globals.cpp	/^int SERVER_PORT = 7878;$/;"	v
TABLE_ALL	globals.cpp	/^int TABLE_ALL = 60;$/;"	v
TABLE_COL	globals.cpp	/^int TABLE_COL = 20;$/;"	v
TABLE_HEIGHT	globals.cpp	/^int TABLE_HEIGHT = 110;$/;"	v
TABLE_H_SPACE	globals.cpp	/^int TABLE_H_SPACE = 30;$/;"	v
TABLE_ROW	globals.cpp	/^int TABLE_ROW = 3;$/;"	v
TABLE_V_SPACE	globals.cpp	/^int TABLE_V_SPACE = 30;$/;"	v
TABLE_WIDTH	globals.cpp	/^int TABLE_WIDTH = 200;$/;"	v
USERNAME	globals.cpp	/^QString USERNAME = "";$/;"	v
deb	globals.cpp	/^bool deb(QVariant str)$/;"	f
deb	globals.cpp	/^bool deb(QVariant str, QString name)$/;"	f
deleteGlobal	globals.cpp	/^void deleteGlobal()$/;"	f
initGlobal	globals.cpp	/^void initGlobal()$/;"	f
GLOBAL_H	globals.h	2;"	d
main	main.cpp	/^int main(int argc, char *argv[])$/;"	f
MainWindow	mainwindow.cpp	/^MainWindow::MainWindow(QWidget *parent) :$/;"	f	class:MainWindow
getInfo	mainwindow.cpp	/^SessionInfo *MainWindow::getInfo(int session_id)$/;"	f	class:MainWindow
getInfo	mainwindow.cpp	/^SessionInfo* MainWindow::getInfo(int table_id, int table_seat)$/;"	f	class:MainWindow
getNewSessionId	mainwindow.cpp	/^int MainWindow::getNewSessionId()$/;"	f	class:MainWindow
log	mainwindow.cpp	/^void MainWindow::log(QString str)$/;"	f	class:MainWindow
response	mainwindow.cpp	/^void MainWindow::response(SessionInfo* si, QString data)$/;"	f	class:MainWindow
response	mainwindow.cpp	/^void MainWindow::response(int id, QString data)$/;"	f	class:MainWindow
sendRefresh	mainwindow.cpp	/^void MainWindow::sendRefresh()$/;"	f	class:MainWindow
slotDisconnect	mainwindow.cpp	/^void MainWindow::slotDisconnect(int id)$/;"	f	class:MainWindow
slotNewConnection	mainwindow.cpp	/^void MainWindow::slotNewConnection()$/;"	f	class:MainWindow
slotReadData	mainwindow.cpp	/^void MainWindow::slotReadData(int id, QString data)$/;"	f	class:MainWindow
slotSwitchRecv	mainwindow.cpp	/^void MainWindow::slotSwitchRecv(int id, QString str)$/;"	f	class:MainWindow
~MainWindow	mainwindow.cpp	/^MainWindow::~MainWindow()$/;"	f	class:MainWindow
MAINWINDOW_H	mainwindow.h	2;"	d
MainWindow	mainwindow.h	/^class MainWindow : public QMainWindow$/;"	c
Ui	mainwindow.h	/^namespace Ui {$/;"	n
infos	mainwindow.h	/^    QList<SessionInfo*>infos;$/;"	m	class:MainWindow
server	mainwindow.h	/^    QTcpServer* server;$/;"	m	class:MainWindow
table_states	mainwindow.h	/^    int table_states[1000][3]; \/\/ 记录游戏桌是否有人的状态$/;"	m	class:MainWindow
u	mainwindow.h	/^    UserList u;$/;"	m	class:MainWindow
ui	mainwindow.h	/^    Ui::MainWindow *ui;$/;"	m	class:MainWindow
SessionInfo	sessioninfo.cpp	/^SessionInfo::SessionInfo(QTcpSocket *s)$/;"	f	class:SessionInfo
getSessionId	sessioninfo.cpp	/^int SessionInfo::getSessionId()$/;"	f	class:SessionInfo
getTableId	sessioninfo.cpp	/^int SessionInfo::getTableId()$/;"	f	class:SessionInfo
getTableSeat	sessioninfo.cpp	/^int SessionInfo::getTableSeat()$/;"	f	class:SessionInfo
response	sessioninfo.cpp	/^bool SessionInfo::response(QString data)$/;"	f	class:SessionInfo
setInfo	sessioninfo.cpp	/^void SessionInfo::setInfo(QString userID, int table_id, int table_seat)$/;"	f	class:SessionInfo
setSessionId	sessioninfo.cpp	/^void SessionInfo::setSessionId(int id)$/;"	f	class:SessionInfo
SessionInfo	sessioninfo.h	/^class SessionInfo : public QObject$/;"	c
USERINFOS_H	sessioninfo.h	2;"	d
password	sessioninfo.h	/^    QString userID, username, password;$/;"	m	class:SessionInfo
ready	sessioninfo.h	/^    bool ready;$/;"	m	class:SessionInfo
session_id	sessioninfo.h	/^    int session_id;$/;"	m	class:SessionInfo
socket	sessioninfo.h	/^    QTcpSocket* socket;$/;"	m	class:SessionInfo
table_id	sessioninfo.h	/^    int table_id, table_seat;$/;"	m	class:SessionInfo
table_seat	sessioninfo.h	/^    int table_id, table_seat;$/;"	m	class:SessionInfo
userID	sessioninfo.h	/^    QString userID, username, password;$/;"	m	class:SessionInfo
username	sessioninfo.h	/^    QString userID, username, password;$/;"	m	class:SessionInfo
canRegExp	stringutil.cpp	/^bool canRegExp(QString str, QString pat)$/;"	f
fnDecode	stringutil.cpp	/^QString fnDecode(QString text)$/;"	f
fnEncode	stringutil.cpp	/^QString fnEncode(QString text)$/;"	f
getStrMid	stringutil.cpp	/^QString getStrMid(QString text, QString l, QString r)$/;"	f
getStrMids	stringutil.cpp	/^QStringList getStrMids(QString text, QString l, QString r)$/;"	f
getXml	stringutil.cpp	/^QString getXml(QString str, QString pat)$/;"	f
makeXml	stringutil.cpp	/^QString makeXml(QString str, QString pat)$/;"	f
makeXml	stringutil.cpp	/^QString makeXml(int i, QString pat)$/;"	f
STRINGUTIL_H	stringutil.h	2;"	d
UserList	userlist.cpp	/^UserList::UserList()$/;"	f	class:UserList
add	userlist.cpp	/^bool UserList::add(QString n, QString p)$/;"	f	class:UserList
count	userlist.cpp	/^int UserList::count()$/;"	f	class:UserList
exists	userlist.cpp	/^bool UserList::exists(QString n, QString p)$/;"	f	class:UserList
readFromFile	userlist.cpp	/^int UserList::readFromFile()$/;"	f	class:UserList
writeToFile	userlist.cpp	/^bool UserList::writeToFile()$/;"	f	class:UserList
USERLIST_H	userlist.h	2;"	d
User	userlist.h	/^    User(QString username, QString password, int integral) :$/;"	f	class:User
User	userlist.h	/^class User$/;"	c
UserList	userlist.h	/^class UserList$/;"	c
filePath	userlist.h	/^    QString filePath;$/;"	m	class:UserList
integral	userlist.h	/^    int integral;$/;"	m	class:User
password	userlist.h	/^    QString password;$/;"	m	class:User
userID	userlist.h	/^    QString userID;$/;"	m	class:User
username	userlist.h	/^    QString username;$/;"	m	class:User
users	userlist.h	/^    QList<User>users;$/;"	m	class:UserList
UserSocket	usersocket.cpp	/^UserSocket::UserSocket(QTcpSocket *s)$/;"	f	class:UserSocket
setInfo	usersocket.cpp	/^void UserSocket::setInfo(QString userID, int tableID, int table_seat)$/;"	f	class:UserSocket
slotDisConnection	usersocket.cpp	/^void UserSocket::slotDisConnection()$/;"	f	class:UserSocket
slotReadyRead	usersocket.cpp	/^void UserSocket::slotReadyRead()$/;"	f	class:UserSocket
SOCKET_H	usersocket.h	2;"	d
UserSocket	usersocket.h	/^class UserSocket : public QTcpSocket$/;"	c
password	usersocket.h	/^    QString username, password;$/;"	m	class:UserSocket
ready	usersocket.h	/^    bool ready;$/;"	m	class:UserSocket
table_id	usersocket.h	/^    int table_id, table_seat; \/\/ 座位位置$/;"	m	class:UserSocket
table_seat	usersocket.h	/^    int table_id, table_seat; \/\/ 座位位置$/;"	m	class:UserSocket
userID	usersocket.h	/^    QString userID;$/;"	m	class:UserSocket
username	usersocket.h	/^    QString username, password;$/;"	m	class:UserSocket
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.8	//
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
